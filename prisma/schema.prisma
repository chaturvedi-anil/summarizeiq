// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) @db.Uuid
  email       String    @unique
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @db.Timestamptz(6)
  fullName    String?   @db.VarChar(255)
  customerId  String?   @unique @db.VarChar(255)
  priceId     String?   @db.VarChar(255)
  status      String    @default("inactive") @db.VarChar(50)
  pdfSummaries PdfSummary[]
  payments     Payment[]
}

model PdfSummary {
  id              String   @id @default(uuid()) @db.Uuid
  userId          String   @db.VarChar(255)
  originalFileUrl String   @db.Text
  summaryText     String   @db.Text
  status          String   @default("completed") @db.VarChar(50)
  title           String?  @db.Text
  fileName        String?  @db.Text
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @db.Timestamptz(6)

  user User @relation(fields: [userId], references: [id])
}

model Payment {
  id              String   @id @default(uuid()) @db.Uuid
  amount          Int
  status          String   @db.VarChar(50)
  stripePaymentId String   @unique @db.VarChar(255)
  priceId         String   @db.VarChar(255)
  userEmail       String   @db.VarChar(255)
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @db.Timestamptz(6)

  user User @relation(fields: [userEmail], references: [email])
}
